AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template to update config recorder settings in child accounts created by ControlTower.'
Parameters:

  ExcludedAccounts:
    Description: Excluded Accounts list. This list should contain Management account, Log Archive and Audit accounts at the minimum
    Default: ""
    MaxLength: '2000'
    Type: String

  ConfigRecorderExcludedResourceTypes:
    Description: List of all resource types to be excluded from Config Recorder
    Default: "AWS::HealthLake::FHIRDatastore,AWS::Pinpoint::Segment,AWS::Pinpoint::ApplicationSettings"
    Type: String

  CloudFormationVersion:
    Type: String
    Default: 2
  
  S3SourceBucket:
    Type: String
    Description: "The S3 Bucket that contains the Lambda Zip File."

Resources:     
    ConsumerLambda:
        Type: AWS::Lambda::Function
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
            #FunctionName: ct_configrecorder_override_consumer_cf
            Code:
                S3Bucket: !Ref S3SourceBucket
                S3Key: ct-blogs-content/ct_configrecorder_override_consumer_v2.zip
            Handler: ct_configrecorder_override_consumer.lambda_handler
            Role: !GetAtt ConsumerLambdaExecutionRole.Arn
            Runtime: python3.10
            MemorySize: 128
            Timeout: 180
            Architectures:
                - x86_64
            #ReservedConcurrentExecutions: 10
            Environment:
                Variables:
                    LOG_LEVEL: INFO
                    CONFIG_RECORDER_EXCLUDED_RESOURCE_LIST: !Ref ConfigRecorderExcludedResourceTypes

    ConsumerLambdaEventSourceMapping:
        Type: AWS::Lambda::EventSourceMapping
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
          BatchSize: 1
          Enabled: true
          EventSourceArn: !GetAtt SQSConfigRecorder.Arn
          FunctionName: !GetAtt ConsumerLambda.Arn               
                    
    ConsumerLambdaExecutionRole:
        Type: 'AWS::IAM::Role'
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
          ManagedPolicyArns:
            - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action:
                  - 'sts:AssumeRole'
          Path: /         
          Policies:
            - PolicyName: policy-sts-all
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - sts:AssumeRole
                    Resource: "*"
                  - Effect: Allow
                    Action:
                      - sqs:DeleteMessage
                      - sqs:ReceiveMessage
                      - sqs:SendMessage
                      - sqs:GetQueueAttributes
                    Resource: !GetAtt SQSConfigRecorder.Arn   

    SQSConfigRecorder:
        Type: AWS::SQS::Queue
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
            #QueueName: ct_configrecorder_override_cf
            VisibilityTimeout: 180
            DelaySeconds: 5
            KmsMasterKeyId: alias/aws/sqs

